{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Typescript\\\\tokyo-free-white-react-admin-dashboard-main\\\\src\\\\content\\\\overview\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Box, Typography, Hidden, Container, Grid } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { Helmet } from 'react-helmet-async';\nimport { styled } from '@mui/material/styles';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@mui/material/Button';\nimport React, { useReducer, useEffect } from 'react';\nimport 'src/style.css'; // Compare differemnt  approaches of adding styles to material ui componenets\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GridWrapper = styled(Grid)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return `\n    background: ${theme.colors.gradients.black1};\n`;\n});\nconst MainContent = styled(Box)(() => `\n    height: 100%;\n    display: flex;\n    flex: 1;\n    overflow: auto;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`);\nconst TypographyPrimary = styled(Typography)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return `\n      color: ${theme.colors.alpha.white[100]};\n`;\n});\nconst TypographySecondary = styled(Typography)(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return `\n      color: ${theme.colors.alpha.white[70]};\n`;\n});\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: `${theme.spacing(0)} auto`\n  },\n  loginBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1\n  },\n  header: {\n    textAlign: 'center',\n    background: '#212121',\n    color: '#fff'\n  },\n  card: {\n    marginTop: theme.spacing(10)\n  }\n})); //state type\n// eslint -- enforce coding stand\n\nconst initialState = {\n  username: '',\n  password: '',\n  isButtonDisabled: true,\n  helperText: '',\n  isError: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'setUsername':\n      return { ...state,\n        username: action.payload\n      };\n\n    case 'setPassword':\n      return { ...state,\n        password: action.payload\n      };\n\n    case 'setIsButtonDisabled':\n      return { ...state,\n        isButtonDisabled: action.payload\n      };\n\n    case 'loginSuccess':\n      return { ...state,\n        helperText: action.payload,\n        isError: false\n      };\n\n    case 'loginFailed':\n      return { ...state,\n        helperText: action.payload,\n        isError: true\n      };\n\n    case 'setIsError':\n      return { ...state,\n        isError: action.payload\n      };\n  }\n};\n\nfunction Status500() {\n  _s();\n\n  const [pending, setPending] = useState(false);\n\n  function handleClick() {\n    setPending(true);\n  }\n\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    if (state.username.trim() && state.password.trim()) {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: false\n      });\n    } else {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: true\n      });\n    }\n  }, [state.username, state.password]);\n\n  const handleLogin = () => {\n    if (state.username === 'admin@gmail.com' && state.password === 'admin') {\n      dispatch({\n        type: 'loginSuccess',\n        payload: 'Login Successfully'\n      });\n      window.location.href = \"/dashboards/crypto\";\n    } else {\n      dispatch({\n        type: 'loginFailed',\n        payload: 'Incorrect email or password'\n      });\n    }\n  };\n\n  const handleKeyPress = event => {\n    if (event.keyCode === 13 || event.which === 13) {\n      state.isButtonDisabled || handleLogin();\n    }\n  };\n\n  const handleUsernameChange = event => {\n    dispatch({\n      type: 'setUsername',\n      payload: event.target.value\n    });\n  };\n\n  const handlePasswordChange = event => {\n    dispatch({\n      type: 'setPassword',\n      payload: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Inabia - ediscovery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        sx: {\n          height: '100%'\n        },\n        alignItems: \"stretch\",\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          mdDown: true,\n          children: /*#__PURE__*/_jsxDEV(GridWrapper, {\n            xs: 12,\n            md: 6,\n            alignItems: \"center\",\n            display: \"flex\",\n            className: \"login-bg\",\n            justifyContent: \"center\",\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              maxWidth: \"lg\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                textAlign: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(TypographyPrimary, {\n                  variant: \"h1\",\n                  sx: {\n                    my: 1\n                  },\n                  fontSize: \"40px\",\n                  fontWeight: \"lighter\",\n                  letterSpacing: \"1px\",\n                  children: \"Welcome to\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TypographyPrimary, {\n                  variant: \"h1\",\n                  sx: {\n                    my: 1\n                  },\n                  fontSize: \"40px\",\n                  letterSpacing: \"1px\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"INABIA EBOT\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TypographySecondary, {\n                  variant: \"h4\",\n                  fontWeight: \"normal\",\n                  sx: {\n                    mb: 4\n                  },\n                  color: \"#fff\",\n                  children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          md: 6,\n          alignItems: \"center\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"sm\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              noValidate: true,\n              autoComplete: \"off\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                textAlign: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"500\",\n                  height: 80,\n                  src: \"/static/images/inabia_ai_logo.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h2\",\n                  sx: {\n                    my: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    error: state.isError,\n                    fullWidth: true,\n                    id: \"username\",\n                    type: \"email\",\n                    label: \"Email\",\n                    placeholder: \"Email\",\n                    margin: \"normal\",\n                    onChange: handleUsernameChange,\n                    onKeyPress: handleKeyPress,\n                    autoComplete: \"current-email\",\n                    sx: {\n                      mb: 2,\n                      width: '60%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    error: state.isError,\n                    fullWidth: true,\n                    id: \"password\",\n                    type: \"password\",\n                    label: \"Password\",\n                    placeholder: \"Password\",\n                    margin: \"normal\",\n                    helperText: state.helperText,\n                    onChange: handlePasswordChange,\n                    onKeyPress: handleKeyPress,\n                    autoComplete: \"current-password\",\n                    sx: {\n                      mb: 2,\n                      width: '60%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  sx: {\n                    mb: 2\n                  } //className={classes.loginBtn}\n                  ,\n                  className: \"loginbtn\",\n                  onClick: handleLogin,\n                  disabled: state.isButtonDisabled,\n                  children: \"Signin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    my: 1\n                  },\n                  children: [\"Don't have a account, \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"register\",\n                    target: \"_blank\",\n                    color: \"red\",\n                    children: \" register now\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Status500, \"3YPnKoNkE2KKsz5h8bstcoVTqJM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Status500;\nexport default Status500;\n\nvar _c;\n\n$RefreshReg$(_c, \"Status500\");","map":{"version":3,"sources":["C:/React Typescript/tokyo-free-white-react-admin-dashboard-main/src/content/overview/index.tsx"],"names":["useState","Box","Typography","Hidden","Container","Grid","TextField","Helmet","styled","createStyles","makeStyles","Button","React","useReducer","useEffect","GridWrapper","theme","colors","gradients","black1","MainContent","TypographyPrimary","alpha","white","TypographySecondary","useStyles","container","display","flexWrap","margin","spacing","loginBtn","marginTop","flexGrow","header","textAlign","background","color","card","initialState","username","password","isButtonDisabled","helperText","isError","reducer","state","action","type","payload","Status500","pending","setPending","handleClick","classes","dispatch","trim","handleLogin","window","location","href","handleKeyPress","event","keyCode","which","handleUsernameChange","target","value","handlePasswordChange","height","my","mb","width"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SACEC,GADF,EAEEC,UAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,IALF,QAMO,eANP;AAOA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAO,eAAP,C,CACA;;;;AACA,MAAMC,WAAW,GAAGP,MAAM,CAACH,IAAD,CAAN,CAClB;AAAA,MAAC;AAAEW,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAClB,kBAAkBA,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,MAAO;AAChD,CAFE;AAAA,CADkB,CAApB;AAMA,MAAMC,WAAW,GAAGZ,MAAM,CAACP,GAAD,CAAN,CAClB,MAAO;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAToB,CAApB;AAYA,MAAMoB,iBAAiB,GAAGb,MAAM,CAACN,UAAD,CAAN,CACxB;AAAA,MAAC;AAAEc,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAClB,eAAeA,KAAK,CAACC,MAAN,CAAaK,KAAb,CAAmBC,KAAnB,CAAyB,GAAzB,CAA8B;AAC7C,CAFE;AAAA,CADwB,CAA1B;AAMA,MAAMC,mBAAmB,GAAGhB,MAAM,CAACN,UAAD,CAAN,CAC1B;AAAA,MAAC;AAAEc,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAClB,eAAeA,KAAK,CAACC,MAAN,CAAaK,KAAb,CAAmBC,KAAnB,CAAyB,EAAzB,CAA6B;AAC5C,CAFE;AAAA,CAD0B,CAA5B;AAMA,MAAME,SAAS,GAAGf,UAAU,CAAEM,KAAD,IAC3BP,YAAY,CAAC;AACXiB,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE,MAFD;AAITC,IAAAA,MAAM,EAAG,GAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,CAAiB;AAJnB,GADA;AAOXC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAEhB,KAAK,CAACc,OAAN,CAAc,CAAd,CADH;AAERG,IAAAA,QAAQ,EAAE;AAFF,GAPC;AAWXC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,QADL;AAENC,IAAAA,UAAU,EAAE,SAFN;AAGNC,IAAAA,KAAK,EAAE;AAHD,GAXG;AAgBXC,EAAAA,IAAI,EAAE;AACJN,IAAAA,SAAS,EAAEhB,KAAK,CAACc,OAAN,CAAc,EAAd;AADP;AAhBK,CAAD,CADc,CAA5B,C,CAuBA;AACA;;AASA,MAAMS,YAAkB,GAAG;AACzBC,EAAAA,QAAQ,EAAE,EADe;AAEzBC,EAAAA,QAAQ,EAAE,EAFe;AAGzBC,EAAAA,gBAAgB,EAAE,IAHO;AAIzBC,EAAAA,UAAU,EAAE,EAJa;AAKzBC,EAAAA,OAAO,EAAE;AALgB,CAA3B;;AAeA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAeC,MAAf,KAAyC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELN,QAAAA,QAAQ,EAAEO,MAAM,CAACE;AAFZ,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,QAAQ,EAAEM,MAAM,CAACE;AAFZ,OAAP;;AAIF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,gBAAgB,EAAEK,MAAM,CAACE;AAFpB,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACE,OAFd;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACE,OAFd;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,OAAO,EAAEG,MAAM,CAACE;AAFX,OAAP;AA7BJ;AAkCD,CAnCD;;AAsCA,SAASC,SAAT,GAAqB;AAAA;;AAEnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpD,QAAQ,CAAC,KAAD,CAAtC;;AACA,WAASqD,WAAT,GAAuB;AACrBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAED,QAAME,OAAO,GAAG7B,SAAS,EAAzB;AACA,QAAM,CAACqB,KAAD,EAAQS,QAAR,IAAoB1C,UAAU,CAACgC,OAAD,EAAUN,YAAV,CAApC;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgC,KAAK,CAACN,QAAN,CAAegB,IAAf,MAAyBV,KAAK,CAACL,QAAN,CAAee,IAAf,EAA7B,EAAoD;AACnDD,MAAAA,QAAQ,CAAC;AACPP,QAAAA,IAAI,EAAE,qBADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA,KALD,MAKO;AACLM,MAAAA,QAAQ,CAAC;AACPP,QAAAA,IAAI,EAAE,qBADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID;AACF,GAZQ,EAYN,CAACH,KAAK,CAACN,QAAP,EAAiBM,KAAK,CAACL,QAAvB,CAZM,CAAT;;AAcA,QAAMgB,WAAW,GAAG,MAAM;AACxB,QAAIX,KAAK,CAACN,QAAN,KAAmB,iBAAnB,IAAwCM,KAAK,CAACL,QAAN,KAAmB,OAA/D,EAAwE;AACtEc,MAAAA,QAAQ,CAAC;AACPP,QAAAA,IAAI,EAAE,cADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAKAS,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,oBAAvB;AAED,KARD,MAQO;AACLL,MAAAA,QAAQ,CAAC;AACPP,QAAAA,IAAI,EAAE,aADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID;AACF,GAfD;;AAiBA,QAAMY,cAAc,GAAIC,KAAD,IAAgC;AACrD,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAlB,IAAwBD,KAAK,CAACE,KAAN,KAAgB,EAA5C,EAAgD;AAC9ClB,MAAAA,KAAK,CAACJ,gBAAN,IAA0Be,WAAW,EAArC;AACD;AACF,GAJD;;AAMA,QAAMQ,oBAAgE,GACnEH,KAAD,IAAW;AACTP,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEa,KAAK,CAACI,MAAN,CAAaC;AAFf,KAAD,CAAR;AAKD,GAPH;;AASA,QAAMC,oBAAgE,GACnEN,KAAD,IAAW;AACTP,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEa,KAAK,CAACI,MAAN,CAAaC;AAFf,KAAD,CAAR;AAID,GANH;;AAQA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,WAAD;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,EAAE,EAAE;AAAEE,UAAAA,MAAM,EAAE;AAAV,SAFN;AAGE,QAAA,UAAU,EAAC,SAHb;AAIE,QAAA,OAAO,EAAE,CAJX;AAAA,gCAOE,QAAC,MAAD;AAAQ,UAAA,MAAM,MAAd;AAAA,iCAEE,QAAC,WAAD;AACE,YAAA,EAAE,EAAE,EADN;AAEE,YAAA,EAAE,EAAE,CAFN;AAGE,YAAA,UAAU,EAAC,QAHb;AAIE,YAAA,OAAO,EAAC,MAJV;AAKE,YAAA,SAAS,EAAC,UALZ;AAME,YAAA,cAAc,EAAC,QANjB;AAOE,YAAA,IAAI,MAPN;AAAA,mCAWE,QAAC,SAAD;AAAW,cAAA,QAAQ,EAAC,IAApB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACE,QAAC,iBAAD;AAAmB,kBAAA,OAAO,EAAC,IAA3B;AAAgC,kBAAA,EAAE,EAAE;AAAEC,oBAAAA,EAAE,EAAE;AAAN,mBAApC;AACA,kBAAA,QAAQ,EAAC,MADT;AAEA,kBAAA,UAAU,EAAC,SAFX;AAGA,kBAAA,aAAa,EAAC,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAQE,QAAC,iBAAD;AAAmB,kBAAA,OAAO,EAAC,IAA3B;AAAgC,kBAAA,EAAE,EAAE;AAAEA,oBAAAA,EAAE,EAAE;AAAN,mBAApC;AACA,kBAAA,QAAQ,EAAC,MADT;AAEA,kBAAA,aAAa,EAAC,KAFd;AAAA,yCAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA,wBARF,eAcE,QAAC,mBAAD;AACE,kBAAA,OAAO,EAAC,IADV;AAEE,kBAAA,UAAU,EAAC,QAFb;AAGE,kBAAA,EAAE,EAAE;AAAEC,oBAAAA,EAAE,EAAE;AAAN,mBAHN;AAIE,kBAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAoDE,QAAC,IAAD;AACE,UAAA,EAAE,EAAE,EADN;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,UAAU,EAAC,QAHb;AAIE,UAAA,OAAO,EAAC,MAJV;AAKE,UAAA,cAAc,EAAC,QALjB;AAME,UAAA,IAAI,MANN;AAAA,iCAQE,QAAC,SAAD;AAAW,YAAA,QAAQ,EAAC,IAApB;AAAA,mCAEA;AAAO,cAAA,UAAU,MAAjB;AAAkB,cAAA,YAAY,EAAC,KAA/B;AAAA,qCAEE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC,QAAf;AAAA,wCACE;AACE,kBAAA,GAAG,EAAC,KADN;AAEE,kBAAA,MAAM,EAAE,EAFV;AAGE,kBAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,wBADF,eAME;AAAA;AAAA;AAAA;AAAA,wBANF,eAOE;AAAA;AAAA;AAAA;AAAA,wBAPF,eASE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,IAApB;AAAyB,kBAAA,EAAE,EAAE;AAAED,oBAAAA,EAAE,EAAE;AAAN,mBAA7B;AAAA,0CAEA,QAAC,SAAD;AACM,oBAAA,KAAK,EAAExB,KAAK,CAACF,OADnB;AAEM,oBAAA,SAAS,MAFf;AAGM,oBAAA,EAAE,EAAC,UAHT;AAIM,oBAAA,IAAI,EAAC,OAJX;AAKM,oBAAA,KAAK,EAAC,OALZ;AAMM,oBAAA,WAAW,EAAC,OANlB;AAOM,oBAAA,MAAM,EAAC,QAPb;AAQM,oBAAA,QAAQ,EAAEqB,oBARhB;AASM,oBAAA,UAAU,EAAEJ,cATlB;AAUM,oBAAA,YAAY,EAAC,eAVnB;AAWM,oBAAA,EAAE,EAAE;AAAEU,sBAAAA,EAAE,EAAE,CAAN;AAASC,sBAAAA,KAAK,EAAC;AAAf;AAXV;AAAA;AAAA;AAAA;AAAA,0BAFA,eAgBA;AAAA;AAAA;AAAA;AAAA,0BAhBA,eAkBA,QAAC,SAAD;AACM,oBAAA,KAAK,EAAE1B,KAAK,CAACF,OADnB;AAEM,oBAAA,SAAS,MAFf;AAGM,oBAAA,EAAE,EAAC,UAHT;AAIM,oBAAA,IAAI,EAAC,UAJX;AAKM,oBAAA,KAAK,EAAC,UALZ;AAMM,oBAAA,WAAW,EAAC,UANlB;AAOM,oBAAA,MAAM,EAAC,QAPb;AAQM,oBAAA,UAAU,EAAEE,KAAK,CAACH,UARxB;AASM,oBAAA,QAAQ,EAAEyB,oBAThB;AAUM,oBAAA,UAAU,EAAEP,cAVlB;AAWM,oBAAA,YAAY,EAAC,kBAXnB;AAYM,oBAAA,EAAE,EAAE;AAAEU,sBAAAA,EAAE,EAAE,CAAN;AAASC,sBAAAA,KAAK,EAAC;AAAf;AAZV;AAAA;AAAA;AAAA;AAAA,0BAlBA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,eAqDE,QAAC,MAAD;AACA,kBAAA,OAAO,EAAC,WADR;AAEA,kBAAA,EAAE,EAAE;AAAED,oBAAAA,EAAE,EAAE;AAAN,mBAFJ,CAGA;AAHA;AAIA,kBAAA,SAAS,EAAE,UAJX;AAKA,kBAAA,OAAO,EAAEd,WALT;AAMA,kBAAA,QAAQ,EAAEX,KAAK,CAACJ,gBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBArDF,eA+DE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,IAApB;AAAyB,kBAAA,EAAE,EAAE;AAAE4B,oBAAAA,EAAE,EAAE;AAAN,mBAA7B;AAAA,oEACwB;AAAG,oBAAA,IAAI,EAAC,UAAR;AACtB,oBAAA,MAAM,EAAC,QADe;AAEtB,oBAAA,KAAK,EAAC,KAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADxB;AAAA;AAAA;AAAA;AAAA;AAAA,wBA/DF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,gBApDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAmJD;;GAnNQpB,S;UAOSzB,S;;;KAPTyB,S;AAqNT,eAAeA,SAAf","sourcesContent":["import { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Hidden,\n  Container,\n  Grid\n} from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { Helmet } from 'react-helmet-async';\n\nimport { styled } from '@mui/material/styles';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@mui/material/Button';\n\nimport React, { useReducer, useEffect } from 'react';\nimport 'src/style.css';\n// Compare differemnt  approaches of adding styles to material ui componenets\nconst GridWrapper = styled(Grid)(\n  ({ theme }) => `\n    background: ${theme.colors.gradients.black1};\n`\n);\n\nconst MainContent = styled(Box)(\n  () => `\n    height: 100%;\n    display: flex;\n    flex: 1;\n    overflow: auto;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`\n);\n\nconst TypographyPrimary = styled(Typography)(\n  ({ theme }) => `\n      color: ${theme.colors.alpha.white[100]};\n`\n);\n\nconst TypographySecondary = styled(Typography)(\n  ({ theme }) => `\n      color: ${theme.colors.alpha.white[70]};\n`\n);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      \n      margin: `${theme.spacing(0)} auto`\n    },\n    loginBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1\n    },\n    header: {\n      textAlign: 'center',\n      background: '#212121',\n      color: '#fff'\n    },\n    card: {\n      marginTop: theme.spacing(10)\n    }\n  })\n);\n\n//state type\n// eslint -- enforce coding stand\ntype State = {\n  username: string\n  password:  string\n  isButtonDisabled: boolean\n  helperText: string\n  isError: boolean\n};\n\nconst initialState:State = {\n  username: '',\n  password: '',\n  isButtonDisabled: true,\n  helperText: '',\n  isError: false\n};\n\ntype Action = { type: 'setUsername', payload: string }\n  | { type: 'setPassword', payload: string }\n  | { type: 'setIsButtonDisabled', payload: boolean }\n  | { type: 'loginSuccess', payload: string }\n  | { type: 'loginFailed', payload: string }\n  | { type: 'setIsError', payload: boolean };\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'setUsername': \n      return {\n        ...state,\n        username: action.payload\n      };\n    case 'setPassword': \n      return {\n        ...state,\n        password: action.payload\n      };\n    case 'setIsButtonDisabled': \n      return {\n        ...state,\n        isButtonDisabled: action.payload\n      };\n    case 'loginSuccess': \n      return {\n        ...state,\n        helperText: action.payload,\n        isError: false\n      };\n    case 'loginFailed': \n      return {\n        ...state,\n        helperText: action.payload,\n        isError: true\n      };\n    case 'setIsError': \n      return {\n        ...state,\n        isError: action.payload\n      };\n  }\n}\n\n\nfunction Status500() {\n\n  const [pending, setPending] = useState(false);\n  function handleClick() {\n    setPending(true);\n  }\n\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    if (state.username.trim() && state.password.trim()) {\n     dispatch({\n       type: 'setIsButtonDisabled',\n       payload: false\n     });\n    } else {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: true\n      });\n    }\n  }, [state.username, state.password]);\n\n  const handleLogin = () => {\n    if (state.username === 'admin@gmail.com' && state.password === 'admin') {\n      dispatch({\n        type: 'loginSuccess',\n        payload: 'Login Successfully',\n      });\n\n      window.location.href = \"/dashboards/crypto\";\n\n    } else {\n      dispatch({\n        type: 'loginFailed',\n        payload: 'Incorrect email or password'\n      });\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.keyCode === 13 || event.which === 13) {\n      state.isButtonDisabled || handleLogin();\n    }\n  };\n\n  const handleUsernameChange: React.ChangeEventHandler<HTMLInputElement> =\n    (event) => {\n      dispatch({\n        type: 'setUsername',\n        payload: event.target.value\n        \n      });\n    };\n\n  const handlePasswordChange: React.ChangeEventHandler<HTMLInputElement> =\n    (event) => {\n      dispatch({\n        type: 'setPassword',\n        payload: event.target.value\n      });\n    }\n\n  return (\n    <>\n      <Helmet>\n        <title>Inabia - ediscovery</title>\n      </Helmet>\n      <MainContent>\n        <Grid\n          container\n          sx={{ height: '100%' }}\n          alignItems=\"stretch\"\n          spacing={0}\n        >\n          \n          <Hidden mdDown>\n\n            <GridWrapper\n              xs={12}\n              md={6}\n              alignItems=\"center\"\n              display=\"flex\"\n              className='login-bg'\n              justifyContent=\"center\"\n              item\n            >\n              \n              \n              <Container maxWidth=\"lg\" >\n                <Box textAlign=\"left\">\n                  <TypographyPrimary variant=\"h1\" sx={{ my: 1}}\n                  fontSize=\"40px\"\n                  fontWeight=\"lighter\"\n                  letterSpacing=\"1px\">\n                  Welcome to \n                  </TypographyPrimary>\n                  \n                  <TypographyPrimary variant=\"h1\" sx={{ my: 1 }}\n                  fontSize=\"40px\"\n                  letterSpacing=\"1px\"\n                  >\n                  <b>INABIA EBOT</b>\n                  </TypographyPrimary>\n                  <TypographySecondary\n                    variant=\"h4\"\n                    fontWeight=\"normal\"\n                    sx={{ mb: 4 }}\n                    color=\"#fff\"\n                  >\n                    \n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\n                  </TypographySecondary>\n                  \n                </Box>\n              </Container>\n              \n            </GridWrapper>\n    \n          </Hidden>\n\n          <Grid\n            xs={12}\n            md={6}\n            alignItems=\"center\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            item\n          >\n            <Container maxWidth=\"sm\">\n            \n            <form  noValidate autoComplete=\"off\">\n\n              <Box textAlign=\"center\">\n                <img\n                  alt=\"500\"\n                  height={80}\n                  src=\"/static/images/inabia_ai_logo.png\"\n                />\n                <br></br>\n                <br></br>\n    \n                <Typography variant=\"h2\" sx={{ my: 1 }}>\n                \n                <TextField\n                      error={state.isError}\n                      fullWidth\n                      id=\"username\"\n                      type=\"email\"\n                      label=\"Email\"\n                      placeholder=\"Email\"\n                      margin=\"normal\"\n                      onChange={handleUsernameChange}\n                      onKeyPress={handleKeyPress}\n                      autoComplete=\"current-email\"\n                      sx={{ mb: 2, width:'60%' }}\n                    />\n                \n                <br></br>\n\n                <TextField\n                      error={state.isError}\n                      fullWidth\n                      id=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      placeholder=\"Password\"\n                      margin=\"normal\"\n                      helperText={state.helperText}\n                      onChange={handlePasswordChange}\n                      onKeyPress={handleKeyPress}\n                      autoComplete=\"current-password\"\n                      sx={{ mb: 2, width:'60%' }}\n                    />\n\n                </Typography>\n                \n                {/* <LoadingButton\n                  onClick={handleClick}\n                  loading={pending}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  startIcon={<RefreshTwoToneIcon />}\n                >\n                  Refresh view\n                </LoadingButton> */}\n                <Button \n                variant=\"contained\"\n                sx={{ mb: 2 }}\n                //className={classes.loginBtn}\n                className =\"loginbtn\"\n                onClick={handleLogin}\n                disabled={state.isButtonDisabled}\n                >\n                  Signin\n                </Button>\n                <Typography variant=\"h6\" sx={{ my: 1 }}>\n                  Don't have a account, <a href=\"register\"\n                  target=\"_blank\" \n                  color=\"red\" \n                  > register now</a>\n                </Typography>\n              </Box>\n              </form>\n            </Container>\n          </Grid>\n        </Grid>\n      </MainContent>\n    </>\n  );\n}\n\nexport default Status500;\n"]},"metadata":{},"sourceType":"module"}