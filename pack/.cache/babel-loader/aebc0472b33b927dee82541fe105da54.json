{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Typescript\\\\tokyo-free-white-react-admin-dashboard-main\\\\src\\\\content\\\\overview\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from 'react';\nimport { createStyles, makeStyles } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport CardHeader from '@mui/material/CardHeader';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: 400,\n    margin: `${theme.spacing(0)} auto`\n  },\n  loginBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1\n  },\n  header: {\n    textAlign: 'center',\n    background: '#212121',\n    color: '#fff'\n  },\n  card: {\n    marginTop: theme.spacing(10)\n  }\n})); //state type\n\nconst initialState = {\n  username: '',\n  password: '',\n  isButtonDisabled: true,\n  helperText: '',\n  isError: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'setUsername':\n      return { ...state,\n        username: action.payload\n      };\n\n    case 'setPassword':\n      return { ...state,\n        password: action.payload\n      };\n\n    case 'setIsButtonDisabled':\n      return { ...state,\n        isButtonDisabled: action.payload\n      };\n\n    case 'loginSuccess':\n      return { ...state,\n        helperText: action.payload,\n        isError: false\n      };\n\n    case 'loginFailed':\n      return { ...state,\n        helperText: action.payload,\n        isError: true\n      };\n\n    case 'setIsError':\n      return { ...state,\n        isError: action.payload\n      };\n  }\n};\n\nconst Login = () => {\n  _s();\n\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    if (state.username.trim() && state.password.trim()) {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: false\n      });\n    } else {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: true\n      });\n    }\n  }, [state.username, state.password]);\n\n  const handleLogin = () => {\n    if (state.username === 'admin@gmail.com' && state.password === 'admin') {\n      dispatch({\n        type: 'loginSuccess',\n        payload: 'Login Successfully'\n      });\n    } else {\n      dispatch({\n        type: 'loginFailed',\n        payload: 'Incorrect username or password'\n      });\n    }\n  };\n\n  const handleKeyPress = event => {\n    if (event.keyCode === 13 || event.which === 13) {\n      state.isButtonDisabled || handleLogin();\n    }\n  };\n\n  const handleUsernameChange = event => {\n    dispatch({\n      type: 'setUsername',\n      payload: event.target.value\n    });\n  };\n\n  const handlePasswordChange = event => {\n    dispatch({\n      type: 'setPassword',\n      payload: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: classes.header,\n        title: \"Login App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            error: state.isError,\n            fullWidth: true,\n            id: \"username\",\n            type: \"email\",\n            label: \"Username\",\n            placeholder: \"Username\",\n            margin: \"normal\",\n            onChange: handleUsernameChange,\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            error: state.isError,\n            fullWidth: true,\n            id: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            placeholder: \"Password\",\n            margin: \"normal\",\n            helperText: state.helperText,\n            onChange: handlePasswordChange,\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          color: \"secondary\",\n          className: classes.loginBtn,\n          onClick: handleLogin,\n          disabled: state.isButtonDisabled,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"l/48ceYlY8jGaCSDvsMjpNWljWY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/React Typescript/tokyo-free-white-react-admin-dashboard-main/src/content/overview/index.tsx"],"names":["React","useReducer","useEffect","createStyles","makeStyles","TextField","Card","CardContent","CardActions","CardHeader","Button","useStyles","theme","container","display","flexWrap","width","margin","spacing","loginBtn","marginTop","flexGrow","header","textAlign","background","color","card","initialState","username","password","isButtonDisabled","helperText","isError","reducer","state","action","type","payload","Login","classes","dispatch","trim","handleLogin","handleKeyPress","event","keyCode","which","handleUsernameChange","target","value","handlePasswordChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,sBAAhD;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,IAC3BT,YAAY,CAAC;AACXU,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE,MAFD;AAGTC,IAAAA,KAAK,EAAE,GAHE;AAITC,IAAAA,MAAM,EAAG,GAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB;AAJnB,GADA;AAOXC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAER,KAAK,CAACM,OAAN,CAAc,CAAd,CADH;AAERG,IAAAA,QAAQ,EAAE;AAFF,GAPC;AAWXC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,QADL;AAENC,IAAAA,UAAU,EAAE,SAFN;AAGNC,IAAAA,KAAK,EAAE;AAHD,GAXG;AAgBXC,EAAAA,IAAI,EAAE;AACJN,IAAAA,SAAS,EAAER,KAAK,CAACM,OAAN,CAAc,EAAd;AADP;AAhBK,CAAD,CADc,CAA5B,C,CAuBA;;AAUA,MAAMS,YAAkB,GAAG;AACzBC,EAAAA,QAAQ,EAAE,EADe;AAEzBC,EAAAA,QAAQ,EAAE,EAFe;AAGzBC,EAAAA,gBAAgB,EAAE,IAHO;AAIzBC,EAAAA,UAAU,EAAE,EAJa;AAKzBC,EAAAA,OAAO,EAAE;AALgB,CAA3B;;AAeA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAeC,MAAf,KAAyC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELN,QAAAA,QAAQ,EAAEO,MAAM,CAACE;AAFZ,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,QAAQ,EAAEM,MAAM,CAACE;AAFZ,OAAP;;AAIF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,gBAAgB,EAAEK,MAAM,CAACE;AAFpB,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACE,OAFd;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACE,OAFd;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,OAAO,EAAEG,MAAM,CAACE;AAFX,OAAP;AA7BJ;AAkCD,CAnCD;;AAqCA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,OAAO,GAAG5B,SAAS,EAAzB;AACA,QAAM,CAACuB,KAAD,EAAQM,QAAR,IAAoBvC,UAAU,CAACgC,OAAD,EAAUN,YAAV,CAApC;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgC,KAAK,CAACN,QAAN,CAAea,IAAf,MAAyBP,KAAK,CAACL,QAAN,CAAeY,IAAf,EAA7B,EAAoD;AACnDD,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAE,qBADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA,KALD,MAKO;AACLG,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAE,qBADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID;AACF,GAZQ,EAYN,CAACH,KAAK,CAACN,QAAP,EAAiBM,KAAK,CAACL,QAAvB,CAZM,CAAT;;AAcA,QAAMa,WAAW,GAAG,MAAM;AACxB,QAAIR,KAAK,CAACN,QAAN,KAAmB,iBAAnB,IAAwCM,KAAK,CAACL,QAAN,KAAmB,OAA/D,EAAwE;AACtEW,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAE,cADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KALD,MAKO;AACLG,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAE,aADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID;AACF,GAZD;;AAcA,QAAMM,cAAc,GAAIC,KAAD,IAAgC;AACrD,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAlB,IAAwBD,KAAK,CAACE,KAAN,KAAgB,EAA5C,EAAgD;AAC9CZ,MAAAA,KAAK,CAACJ,gBAAN,IAA0BY,WAAW,EAArC;AACD;AACF,GAJD;;AAMA,QAAMK,oBAAgE,GACnEH,KAAD,IAAW;AACTJ,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEO,KAAK,CAACI,MAAN,CAAaC;AAFf,KAAD,CAAR;AAID,GANH;;AAQA,QAAMC,oBAAgE,GACnEN,KAAD,IAAW;AACTJ,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEO,KAAK,CAACI,MAAN,CAAaC;AAFf,KAAD,CAAR;AAID,GANH;;AAOA,sBACE;AAAM,IAAA,SAAS,EAAEV,OAAO,CAAC1B,SAAzB;AAAoC,IAAA,UAAU,MAA9C;AAA+C,IAAA,YAAY,EAAC,KAA5D;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE0B,OAAO,CAACb,IAAzB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEa,OAAO,CAACjB,MAA/B;AAAuC,QAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAA,+BACE;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,KAAK,EAAEY,KAAK,CAACF,OADf;AAEE,YAAA,SAAS,MAFX;AAGE,YAAA,EAAE,EAAC,UAHL;AAIE,YAAA,IAAI,EAAC,OAJP;AAKE,YAAA,KAAK,EAAC,UALR;AAME,YAAA,WAAW,EAAC,UANd;AAOE,YAAA,MAAM,EAAC,QAPT;AAQE,YAAA,QAAQ,EAAEe,oBARZ;AASE,YAAA,UAAU,EAAEJ;AATd;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,SAAD;AACE,YAAA,KAAK,EAAET,KAAK,CAACF,OADf;AAEE,YAAA,SAAS,MAFX;AAGE,YAAA,EAAE,EAAC,UAHL;AAIE,YAAA,IAAI,EAAC,UAJP;AAKE,YAAA,KAAK,EAAC,UALR;AAME,YAAA,WAAW,EAAC,UANd;AAOE,YAAA,MAAM,EAAC,QAPT;AAQE,YAAA,UAAU,EAAEE,KAAK,CAACH,UARpB;AASE,YAAA,QAAQ,EAAEmB,oBATZ;AAUE,YAAA,UAAU,EAAEP;AAVd;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eA6BE,QAAC,WAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,WAHR;AAIE,UAAA,SAAS,EAAEJ,OAAO,CAACpB,QAJrB;AAKE,UAAA,OAAO,EAAEuB,WALX;AAME,UAAA,QAAQ,EAAER,KAAK,CAACJ,gBANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CAlGD;;GAAMQ,K;UACY3B,S;;;KADZ2B,K;AAoGN,eAAeA,KAAf","sourcesContent":["import React, { useReducer, useEffect } from 'react';\nimport { createStyles, makeStyles, Theme } from '@mui/material/styles';\n\nimport TextField from '@mui/material/TextField';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport CardHeader from '@mui/material/CardHeader';\nimport Button from '@mui/material/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: 400,\n      margin: `${theme.spacing(0)} auto`\n    },\n    loginBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1\n    },\n    header: {\n      textAlign: 'center',\n      background: '#212121',\n      color: '#fff'\n    },\n    card: {\n      marginTop: theme.spacing(10)\n    }\n  })\n);\n\n//state type\n\ntype State = {\n  username: string\n  password:  string\n  isButtonDisabled: boolean\n  helperText: string\n  isError: boolean\n};\n\nconst initialState:State = {\n  username: '',\n  password: '',\n  isButtonDisabled: true,\n  helperText: '',\n  isError: false\n};\n\ntype Action = { type: 'setUsername', payload: string }\n  | { type: 'setPassword', payload: string }\n  | { type: 'setIsButtonDisabled', payload: boolean }\n  | { type: 'loginSuccess', payload: string }\n  | { type: 'loginFailed', payload: string }\n  | { type: 'setIsError', payload: boolean };\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'setUsername': \n      return {\n        ...state,\n        username: action.payload\n      };\n    case 'setPassword': \n      return {\n        ...state,\n        password: action.payload\n      };\n    case 'setIsButtonDisabled': \n      return {\n        ...state,\n        isButtonDisabled: action.payload\n      };\n    case 'loginSuccess': \n      return {\n        ...state,\n        helperText: action.payload,\n        isError: false\n      };\n    case 'loginFailed': \n      return {\n        ...state,\n        helperText: action.payload,\n        isError: true\n      };\n    case 'setIsError': \n      return {\n        ...state,\n        isError: action.payload\n      };\n  }\n}\n\nconst Login = () => {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    if (state.username.trim() && state.password.trim()) {\n     dispatch({\n       type: 'setIsButtonDisabled',\n       payload: false\n     });\n    } else {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: true\n      });\n    }\n  }, [state.username, state.password]);\n\n  const handleLogin = () => {\n    if (state.username === 'admin@gmail.com' && state.password === 'admin') {\n      dispatch({\n        type: 'loginSuccess',\n        payload: 'Login Successfully'\n      });\n    } else {\n      dispatch({\n        type: 'loginFailed',\n        payload: 'Incorrect username or password'\n      });\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.keyCode === 13 || event.which === 13) {\n      state.isButtonDisabled || handleLogin();\n    }\n  };\n\n  const handleUsernameChange: React.ChangeEventHandler<HTMLInputElement> =\n    (event) => {\n      dispatch({\n        type: 'setUsername',\n        payload: event.target.value\n      });\n    };\n\n  const handlePasswordChange: React.ChangeEventHandler<HTMLInputElement> =\n    (event) => {\n      dispatch({\n        type: 'setPassword',\n        payload: event.target.value\n      });\n    }\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      <Card className={classes.card}>\n        <CardHeader className={classes.header} title=\"Login App\" />\n        <CardContent>\n          <div>\n            <TextField\n              error={state.isError}\n              fullWidth\n              id=\"username\"\n              type=\"email\"\n              label=\"Username\"\n              placeholder=\"Username\"\n              margin=\"normal\"\n              onChange={handleUsernameChange}\n              onKeyPress={handleKeyPress}\n            />\n            <TextField\n              error={state.isError}\n              fullWidth\n              id=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              placeholder=\"Password\"\n              margin=\"normal\"\n              helperText={state.helperText}\n              onChange={handlePasswordChange}\n              onKeyPress={handleKeyPress}\n            />\n          </div>\n        </CardContent>\n        <CardActions>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            color=\"secondary\"\n            className={classes.loginBtn}\n            onClick={handleLogin}\n            disabled={state.isButtonDisabled}>\n            Login\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}